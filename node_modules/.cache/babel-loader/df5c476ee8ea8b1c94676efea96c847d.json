{"ast":null,"code":"var _jsxFileName = \"/Users/mariaeduardatc/Documents/dtmoney/src/index.tsx\";\nimport React from 'react';\nimport { createRoot } from \"react-dom/client\";\nimport { App } from './App';\nimport { Model, Server } from 'miragejs';\nnew Server({\n  models: {\n    transaction: Model\n  },\n  routes: function routes() {\n    var _this = this;\n\n    this.namespace = 'api';\n    this.get('/transactions', function () {\n      return _this.schema.all('transaction');\n    });\n    this.post('/transactions', function (schema, request) {\n      var data = JSON.parse(request.requestBody); // return the data base (schema), its model (transaction) and the data i want to pass to the model (data)\n\n      return schema.create('transaction', data);\n    });\n  }\n});\nvar container = document.getElementById('root');\nvar root = createRoot(container);\nroot.render( /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }\n})));\n\nfunction createServer(arg0) {\n  throw new Error('Function not implemented.');\n}","map":{"version":3,"names":["React","createRoot","App","Model","Server","models","transaction","routes","namespace","get","schema","all","post","request","data","JSON","parse","requestBody","create","container","document","getElementById","root","render","createServer","arg0","Error"],"sources":["/Users/mariaeduardatc/Documents/dtmoney/src/index.tsx"],"sourcesContent":["import React from 'react';\nimport { ReactDOM } from 'react';\nimport { createRoot } from \"react-dom/client\";\nimport {App} from './App'\nimport {Model, Server} from 'miragejs';\n\nnew Server({\n  models: {\n    transaction: Model,\n  },\n\n  routes() {\n    this.namespace = 'api';\n\n    this.get('/transactions', () => {\n      return this.schema.all('transaction')\n    });\n    \n    this.post('/transactions', (schema,request) => {\n      const data = JSON.parse(request.requestBody)\n\n      // return the data base (schema), its model (transaction) and the data i want to pass to the model (data)\n      return schema.create('transaction', data)\n    })\n  }\n})\n\nconst container = document.getElementById('root')!;\nconst root = createRoot(container);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\nfunction createServer(arg0: { routes(): void; }) {\n  throw new Error('Function not implemented.');\n}\n\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAAQC,GAAR,QAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,MAAf,QAA4B,UAA5B;AAEA,IAAIA,MAAJ,CAAW;EACTC,MAAM,EAAE;IACNC,WAAW,EAAEH;EADP,CADC;EAKTI,MALS,oBAKA;IAAA;;IACP,KAAKC,SAAL,GAAiB,KAAjB;IAEA,KAAKC,GAAL,CAAS,eAAT,EAA0B,YAAM;MAC9B,OAAO,KAAI,CAACC,MAAL,CAAYC,GAAZ,CAAgB,aAAhB,CAAP;IACD,CAFD;IAIA,KAAKC,IAAL,CAAU,eAAV,EAA2B,UAACF,MAAD,EAAQG,OAAR,EAAoB;MAC7C,IAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWH,OAAO,CAACI,WAAnB,CAAb,CAD6C,CAG7C;;MACA,OAAOP,MAAM,CAACQ,MAAP,CAAc,aAAd,EAA6BJ,IAA7B,CAAP;IACD,CALD;EAMD;AAlBQ,CAAX;AAqBA,IAAMK,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAlB;AACA,IAAMC,IAAI,GAAGrB,UAAU,CAACkB,SAAD,CAAvB;AACAG,IAAI,CAACC,MAAL,eACE,oBAAC,KAAD,CAAO,UAAP;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,gBACE,oBAAC,GAAD;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,EADF,CADF;;AAKA,SAASC,YAAT,CAAsBC,IAAtB,EAAiD;EAC/C,MAAM,IAAIC,KAAJ,CAAU,2BAAV,CAAN;AACD"},"metadata":{},"sourceType":"module"}